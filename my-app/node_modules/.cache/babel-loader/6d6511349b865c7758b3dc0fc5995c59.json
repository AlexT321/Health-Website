{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexi\\\\Downloads\\\\VsCode Projects\\\\Wubo (Health Website)\\\\Health-Website\\\\my-app\\\\src\\\\components\\\\Board Page Comp\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport { Board_Context } from \"C:/Users/alexi/Downloads/VsCode Projects/Wubo (Health Website)/Health-Website/my-app/src/App\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = _ref => {\n  _s();\n\n  let {\n    name,\n    index\n  } = _ref;\n  const Board = useContext(Board_Context);\n  const [cards, set_cards] = useState([]);\n  const [create_card_overlay_display, set_card_overlay_display] = useState(\"none\");\n  const [create_card_button_display, set_card_button_display] = useState(\"flex\");\n  const [card_name, set_card_name] = useState(\"\");\n  const create_card_ref = useRef(null);\n  const add_card_ref = useRef(null);\n\n  const create_card_server_side = async body => {\n    try {\n      const result = await fetch(\"http://localhost:5000/Health-Website/create_card\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const data = result.json();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const create_card = () => {\n    // select the cards in the sepecific board list\n    const card_info = {\n      //select specific list and add card to the list\n      list_id: {\n        unique_id: Board.single_board_info[0].board_lists[index].unique_id\n      },\n      cards: {\n        $push: {\n          board_lists: {\n            cards: {\n              name: card_name\n            }\n          }\n        }\n      }\n    };\n    create_card_server_side(card_info);\n    Board.set_single_board_info([{ ...Board.single_board_info[0],\n      board_lists: [...Board.single_board_info[0].board_lists.slice(0, index), { ...Board.single_board_info[0].board_lists[index],\n        cards: [...Board.single_board_info[0].board_lists[index].cards, {\n          name: card_name\n        }]\n      }, ...Board.single_board_info[0].board_lists.slice(index + 1)]\n    }]);\n    set_card_name(\"\");\n    set_card_overlay_display(\"none\");\n    set_card_button_display(\"flex\");\n  };\n\n  const add_card = () => {\n    console.log(Board.single_board_info[0].board_lists[index].unique_id);\n    console.log(Board.single_board_info[0].board_lists[index].cards);\n    set_card_overlay_display(\"flex\");\n    set_card_button_display(\"none\");\n  };\n\n  const handleClickOutside = e => {\n    if (create_card_ref.current && !create_card_ref.current.contains(e.target) && !add_card_ref.current.contains(e.target)) {\n      set_card_overlay_display(\"none\");\n      set_card_button_display(\"flex\");\n    }\n  };\n\n  document.addEventListener(\"click\", handleClickOutside);\n\n  if (Board.multiple_board_info.length === 0 || Board.single_board_info.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"menu-overlay\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"board-header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"board-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"board-functionalities\",\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), Board.single_board_info[0].board_lists[index].cards.map((card, index) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          name: card.name,\n          description: card.description\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"create-card-overlay\",\n        style: {\n          display: create_card_overlay_display\n        },\n        ref: create_card_ref,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"create-card-input\",\n          type: \"text\",\n          placeholder: \"Enter card name\",\n          value: card_name,\n          onChange: e => set_card_name(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"create-card-button\",\n          onClick: create_card,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"add-card\",\n        onClick: add_card,\n        style: {\n          display: create_card_button_display\n        },\n        ref: add_card_ref,\n        children: \"+ Add card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"kWWEbOEoZoRIpFQKIpoVnlE7gsM=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useState","useRef","useContext","Board_Context","Card","List","name","index","Board","cards","set_cards","create_card_overlay_display","set_card_overlay_display","create_card_button_display","set_card_button_display","card_name","set_card_name","create_card_ref","add_card_ref","create_card_server_side","body","result","fetch","method","headers","JSON","stringify","data","json","err","console","log","create_card","card_info","list_id","unique_id","single_board_info","board_lists","$push","set_single_board_info","slice","add_card","handleClickOutside","e","current","contains","target","document","addEventListener","multiple_board_info","length","map","card","description","display","value"],"sources":["C:/Users/alexi/Downloads/VsCode Projects/Wubo (Health Website)/Health-Website/my-app/src/components/Board Page Comp/List.js"],"sourcesContent":["import { useState, useRef, useContext } from \"react\";\r\nimport { Board_Context } from \"C:/Users/alexi/Downloads/VsCode Projects/Wubo (Health Website)/Health-Website/my-app/src/App\";\r\nimport Card from \"./Card\";\r\n\r\nconst List = ({ name, index }) => {\r\n  const Board = useContext(Board_Context);\r\n\r\n  const [cards, set_cards] = useState([]);\r\n  const [create_card_overlay_display, set_card_overlay_display] =\r\n    useState(\"none\");\r\n  const [create_card_button_display, set_card_button_display] =\r\n    useState(\"flex\");\r\n  const [card_name, set_card_name] = useState(\"\");\r\n\r\n  const create_card_ref = useRef(null);\r\n  const add_card_ref = useRef(null);\r\n\r\n  const create_card_server_side = async (body) => {\r\n    try {\r\n      const result = await fetch(\r\n        \"http://localhost:5000/Health-Website/create_card\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const data = result.json();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const create_card = () => {\r\n    // select the cards in the sepecific board list\r\n    const card_info = {\r\n      //select specific list and add card to the list\r\n      \r\n      list_id: {unique_id: Board.single_board_info[0].board_lists[index].unique_id},\r\n      cards: {$push: {board_lists: {cards: {name: card_name}}}},\r\n    }\r\n    create_card_server_side(card_info);\r\n    Board.set_single_board_info([\r\n      {\r\n        ...Board.single_board_info[0],\r\n        board_lists: [\r\n          ...Board.single_board_info[0].board_lists.slice(0, index),\r\n          {\r\n            ...Board.single_board_info[0].board_lists[index],\r\n            cards: [\r\n              ...Board.single_board_info[0].board_lists[index].cards,\r\n              {\r\n                name: card_name,\r\n              },\r\n            ],\r\n          },\r\n          ...Board.single_board_info[0].board_lists.slice(index + 1),\r\n        ],\r\n      },\r\n    ]);\r\n    set_card_name(\"\");\r\n    set_card_overlay_display(\"none\");\r\n    set_card_button_display(\"flex\");\r\n  };\r\n\r\n  const add_card = () => {\r\n    console.log(Board.single_board_info[0].board_lists[index].unique_id)\r\n    console.log(Board.single_board_info[0].board_lists[index].cards)\r\n    set_card_overlay_display(\"flex\");\r\n    set_card_button_display(\"none\");\r\n  };\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (\r\n      create_card_ref.current &&\r\n      !create_card_ref.current.contains(e.target) &&\r\n      !add_card_ref.current.contains(e.target)\r\n    ) {\r\n      set_card_overlay_display(\"none\");\r\n      set_card_button_display(\"flex\");\r\n    }\r\n  };\r\n  document.addEventListener(\"click\", handleClickOutside);\r\n\r\n  if (\r\n    Board.multiple_board_info.length === 0 ||\r\n    Board.single_board_info.length === 0\r\n  ) {\r\n    return <div id=\"menu-overlay\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"board\">\r\n        <div id=\"board-header-container\">\r\n          <div id=\"board-name\">{name}</div>\r\n          <button id=\"board-functionalities\">...</button>\r\n        </div>\r\n        {Board.single_board_info[0].board_lists[index].cards.map(\r\n          (card, index) => {\r\n            return (\r\n              <Card\r\n                name={card.name}\r\n                description={card.description}\r\n                key={index}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n        <div\r\n          id=\"create-card-overlay\"\r\n          style={{ display: create_card_overlay_display }}\r\n          ref={create_card_ref}\r\n        >\r\n          <input\r\n            className=\"create-card-input\"\r\n            type=\"text\"\r\n            placeholder=\"Enter card name\"\r\n            value={card_name}\r\n            onChange={(e) => set_card_name(e.target.value)}\r\n          />\r\n          <button id=\"create-card-button\" onClick={create_card}>\r\n            Create\r\n          </button>\r\n        </div>\r\n        <div\r\n          id=\"add-card\"\r\n          onClick={add_card}\r\n          style={{ display: create_card_button_display }}\r\n          ref={add_card_ref}\r\n        >\r\n          + Add card\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
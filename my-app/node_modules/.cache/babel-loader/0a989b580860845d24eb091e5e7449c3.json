{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexi\\\\Downloads\\\\VsCode Projects\\\\Wubo (Health Website)\\\\Health-Website\\\\my-app\\\\src\\\\components\\\\Home Page Comp\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\nimport { User_Context } from \"C:/Users/alexi/Downloads/VsCode Projects/Wubo (Health Website)/Health-Website/my-app/src/App\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = _ref => {\n  _s();\n\n  let {\n    name,\n    unique_id,\n    update_all_choosen_state,\n    update_choosen_state,\n    load_board_data,\n    boards,\n    set_boards\n  } = _ref;\n  const User = useContext(User_Context);\n  const navigate = useNavigate();\n\n  const remove_board = async body => {\n    try {\n      const result = await fetch(\"http://localhost:5000/Health-Website/remove_board\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }); // eslint-disable-next-line no-unused-vars\n\n      const data = result.json();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onClick = async () => {\n    navigate(`/user/${name}`);\n    console.log(unique_id);\n    const update_info = {\n      id: {\n        user_id: User.user_id,\n        \"boards.board_id\": unique_id\n      },\n      choosen: {\n        $set: {\n          \"boards.$.choosen\": true\n        }\n      }\n    };\n    const update_all_info = {\n      id: {\n        user_id: User.user_id\n      },\n      choosen: {\n        $set: {\n          \"boards.$[].choosen\": false\n        }\n      }\n    };\n    await update_all_choosen_state(update_all_info);\n    await update_choosen_state(update_info);\n    await load_board_data();\n  };\n\n  const delete_board = () => {\n    console.log(unique_id);\n    const boards_info = {\n      id: {\n        user_id: User.user_id\n      },\n      board: {\n        $pull: {\n          boards: {\n            board_id: unique_id\n          }\n        }\n      }\n    };\n\n    if (unique_id !== undefined) {\n      remove_board(boards_info);\n    }\n\n    User.set_multiple_board_info(User.multiple_board_info.filter((board, index) => board.board_id !== unique_id));\n    set_boards();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"create-board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"board-button\",\n      onClick: onClick,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"delete-main-board-button\",\n      onClick: delete_board,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Board, \"WMjeaUXI/0ltDn0dAC9iD/84cWw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useNavigate","User_Context","useContext","Board","name","unique_id","update_all_choosen_state","update_choosen_state","load_board_data","boards","set_boards","User","navigate","remove_board","body","result","fetch","method","headers","JSON","stringify","data","json","err","console","log","onClick","update_info","id","user_id","choosen","$set","update_all_info","delete_board","boards_info","board","$pull","board_id","undefined","set_multiple_board_info","multiple_board_info","filter","index"],"sources":["C:/Users/alexi/Downloads/VsCode Projects/Wubo (Health Website)/Health-Website/my-app/src/components/Home Page Comp/Board.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { User_Context } from \"C:/Users/alexi/Downloads/VsCode Projects/Wubo (Health Website)/Health-Website/my-app/src/App\";\r\nimport {useContext} from \"react\";\r\n\r\nconst Board = ({\r\n  name,\r\n  unique_id,\r\n  update_all_choosen_state,\r\n  update_choosen_state,\r\n  load_board_data,\r\n  boards,\r\n  set_boards\r\n}) => {\r\n  const User = useContext(User_Context);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const remove_board = async (body) => {\r\n    try {\r\n      const result = await fetch(\r\n        \"http://localhost:5000/Health-Website/remove_board\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      // eslint-disable-next-line no-unused-vars\r\n      const data = result.json();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  const onClick = async () => {\r\n    navigate(`/user/${name}`);\r\n    console.log(unique_id);\r\n    const update_info = {\r\n      id: { user_id: User.user_id, \"boards.board_id\": unique_id },\r\n      choosen: { $set: { \"boards.$.choosen\": true } },\r\n    };\r\n    const update_all_info = {\r\n      id: {user_id: User.user_id},\r\n      choosen: { $set: { \"boards.$[].choosen\": false } },\r\n    };\r\n    await update_all_choosen_state(update_all_info);\r\n    await update_choosen_state(update_info);\r\n    await load_board_data();\r\n  };\r\n  \r\n  const delete_board = () => {\r\n    console.log(unique_id);\r\n    const boards_info = {\r\n      id: { user_id: User.user_id},\r\n      board: { $pull: {boards: {board_id: unique_id}} },\r\n    }\r\n    if (unique_id !== undefined) {\r\n      remove_board(boards_info);\r\n    }\r\n    User.set_multiple_board_info(User.multiple_board_info.filter((board,index) => board.board_id !== unique_id));\r\n    set_boards()\r\n  }\r\n  return (\r\n    <div id=\"create-board-container\">\r\n      <button className=\"board-button\" onClick={onClick}>\r\n        {name}\r\n      </button>\r\n      <button id=\"delete-main-board-button\" onClick={delete_board}>X</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,8FAA7B;AACA,SAAQC,UAAR,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAG,QAQR;EAAA;;EAAA,IARS;IACbC,IADa;IAEbC,SAFa;IAGbC,wBAHa;IAIbC,oBAJa;IAKbC,eALa;IAMbC,MANa;IAObC;EAPa,CAQT;EACJ,MAAMC,IAAI,GAAGT,UAAU,CAACD,YAAD,CAAvB;EAEA,MAAMW,QAAQ,GAAGZ,WAAW,EAA5B;;EAEA,MAAMa,YAAY,GAAG,MAAOC,IAAP,IAAgB;IACnC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMC,KAAK,CACxB,mDADwB,EAExB;QACEC,MAAM,EAAE,MADV;QAEEC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFX;QAKEJ,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;MALR,CAFwB,CAA1B,CADE,CAWF;;MACA,MAAMO,IAAI,GAAGN,MAAM,CAACO,IAAP,EAAb;IACD,CAbD,CAaE,OAAOC,GAAP,EAAY;MACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD;EACF,CAjBD;;EAoBA,MAAMG,OAAO,GAAG,YAAY;IAC1Bd,QAAQ,CAAE,SAAQR,IAAK,EAAf,CAAR;IACAoB,OAAO,CAACC,GAAR,CAAYpB,SAAZ;IACA,MAAMsB,WAAW,GAAG;MAClBC,EAAE,EAAE;QAAEC,OAAO,EAAElB,IAAI,CAACkB,OAAhB;QAAyB,mBAAmBxB;MAA5C,CADc;MAElByB,OAAO,EAAE;QAAEC,IAAI,EAAE;UAAE,oBAAoB;QAAtB;MAAR;IAFS,CAApB;IAIA,MAAMC,eAAe,GAAG;MACtBJ,EAAE,EAAE;QAACC,OAAO,EAAElB,IAAI,CAACkB;MAAf,CADkB;MAEtBC,OAAO,EAAE;QAAEC,IAAI,EAAE;UAAE,sBAAsB;QAAxB;MAAR;IAFa,CAAxB;IAIA,MAAMzB,wBAAwB,CAAC0B,eAAD,CAA9B;IACA,MAAMzB,oBAAoB,CAACoB,WAAD,CAA1B;IACA,MAAMnB,eAAe,EAArB;EACD,CAdD;;EAgBA,MAAMyB,YAAY,GAAG,MAAM;IACzBT,OAAO,CAACC,GAAR,CAAYpB,SAAZ;IACA,MAAM6B,WAAW,GAAG;MAClBN,EAAE,EAAE;QAAEC,OAAO,EAAElB,IAAI,CAACkB;MAAhB,CADc;MAElBM,KAAK,EAAE;QAAEC,KAAK,EAAE;UAAC3B,MAAM,EAAE;YAAC4B,QAAQ,EAAEhC;UAAX;QAAT;MAAT;IAFW,CAApB;;IAIA,IAAIA,SAAS,KAAKiC,SAAlB,EAA6B;MAC3BzB,YAAY,CAACqB,WAAD,CAAZ;IACD;;IACDvB,IAAI,CAAC4B,uBAAL,CAA6B5B,IAAI,CAAC6B,mBAAL,CAAyBC,MAAzB,CAAgC,CAACN,KAAD,EAAOO,KAAP,KAAiBP,KAAK,CAACE,QAAN,KAAmBhC,SAApE,CAA7B;IACAK,UAAU;EACX,CAXD;;EAYA,oBACE;IAAK,EAAE,EAAC,wBAAR;IAAA,wBACE;MAAQ,SAAS,EAAC,cAAlB;MAAiC,OAAO,EAAEgB,OAA1C;MAAA,UACGtB;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAQ,EAAE,EAAC,0BAAX;MAAsC,OAAO,EAAE6B,YAA/C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CArED;;GAAM9B,K;UAWaH,W;;;KAXbG,K;AAuEN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}